type Album {
  _id: ID!
  name: String
  released: Int
  artists: [Artist]
  bands: [Band]
  tracks: [Track]
  genres: [Genre]
  image: String
}

type Albums {
  items: [Album]
  limit: Int
  offset: Int
  total: Int
}

input CreateAlbum {
  name: String!
  released: Int
  artists: [String]
  bands: [String]
  tracks: [String]
  genres: [String]
  image: String
}

input UpdateAlbum {
  name: String
  released: Int
  artists: [String]
  bands: [String]
  tracks: [String]
  genres: [String]
  image: String
}

type Query {
  getAlbums(limit: Int, offset: Int): Albums
  getAlbum(id: ID!): Album
}

type Mutation {
  createAlbum(album: CreateAlbum): Album
  deleteAlbum(id: ID!): DeleteResponse
  updateAlbum(id: ID!, album: UpdateAlbum): Album
}
