type Track {
  id: ID!
  title: String!
  album: Album
  artists: [Artist]
  bands: [Band]
  duration: Int
  released: Int
  genres: [Genre]
}

type Tracks {
  items: [Track]
  limit: Int
  offset: Int
  total: Int
}

input CreateTrack {
  title: String!
  album: String
  artists: [String]
  bands: [String]
  duration: Int
  released: Int
  genres: [String]
}

input UpdateTrack {
  title: String
  album: String
  artists: [String]
  bands: [String]
  duration: Int
  released: Int
  genres: [String]
}

type Query {
  getTracks(limit: Int, offset: Int): Tracks
  getTrack(id: ID!): Track
}

type Mutation {
  createTrack(track: CreateTrack): Track
  deleteTrack(id: ID!): DeleteResponse
  updateTrack(id: ID!, track: UpdateTrack): Track
}
